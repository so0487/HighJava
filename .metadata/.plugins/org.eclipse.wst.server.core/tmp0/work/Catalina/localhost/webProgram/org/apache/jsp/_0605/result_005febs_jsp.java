/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.73
 * Generated at: 2020-06-06 03:04:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._0605;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class result_005febs_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t\t<title>ebs결과</title>\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t");

	//id
	String id = new String(request.getParameter("id").getBytes("8859_1"),"UTF-8");
// 	String id=request.getParameter("id");
	out.print("ID : "+id);
	
	
      out.write("<br>\r\n");
      out.write("\t\r\n");
      out.write("\t");

	//pwd
	String pwd = new String(request.getParameter("pwd").getBytes("8859_1"),"UTF-8");
	out.print("PW : "+pwd);
	
      out.write("<br>\r\n");
      out.write("\t\r\n");
      out.write("\t");

	//pwdcheck
	String pwdcheck = new String(request.getParameter("pwdcheck").getBytes("8859_1"),"UTF-8");
	out.print("패스워드 확인 : "+pwdcheck);
	
      out.write("<br>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t");

	//name
	String name = new String(request.getParameter("name").getBytes("8859_1"),"UTF-8");
	out.print("이름 : "+name);
	
      out.write("<br>\r\n");
      out.write("\t");

		//gender&agree
		String gender = request.getParameter("gender");
		String agree = request.getParameter("agree");

		if (agree == null) {
			out.print("성별 : " + gender+"\n 정보제공 미동의");
		}else{
			out.print("성별 : "+gender+"\n 정보제공 동의");
		}
	
      out.write("<br>\r\n");
      out.write("                             \r\n");
      out.write("\t");
                     
	//date
	out.print("생년월일 : ");
	String bir_year = request.getParameter("bir_year");
	out.print(bir_year+"/");
	
	String bir_mon = request.getParameter("bir_mon");
	out.print(bir_mon+"/");
	
	String bir_day = request.getParameter("bir_day");
	out.print(bir_day);
	
      out.write("<br>                 \r\n");
      out.write("\t\t                   \r\n");
      out.write("\t");
                     
	//email       
	out.print("email : ");
	String email = new String(request.getParameter("email").getBytes("8859_1"),"UTF-8");
	out.print(email);
	
	String domain = request.getParameter("domain");
	out.print("@"+domain);
	
      out.write("<br>                 \r\n");
      out.write("\t                       \r\n");
      out.write("\t");
                     
	//tel     
	String tel = request.getParameter("tel");
	
	String phagree = request.getParameter("phagree");
	if (phagree == null) {
		out.print("전화번호 : " + tel+"\n 정보제공 미동의");
	}else{
		out.print("전화번호 : "+tel+"\n 정보제공 동의");
	}
	
      out.write("<br>                 \r\n");
      out.write("\t                       \r\n");
      out.write("\t");
                     
	//check    
	out.print("인증방법 : ");
	String check = request.getParameter("check");
	out.print(check);
	
      out.write("<br>                 \r\n");
      out.write("\t                       \r\n");
      out.write("\t");
                     
	//code
	out.print("인증번호 : ");
	String code = new String(request.getParameter("code").getBytes("8859_1"),"UTF-8");
	out.print(code);
	
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
