<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
	
<!-- 이 문서는 ibatis에서 처리할 SQL문을 작성하는 문서입니다. -->
	
<sqlMap namespace="lprod">
	<!-- 
		이 부분에 처리할 SQL문에 맞는 태그를 사용하여 SQL문을 기술한다.
		
		사용할 수 있는 기본적인 태그들...
		<select> ~~ </select>
		<insert> ~~ </insert>
		<update> ~~ </update>
		<delete> ~~ </delete>
		...
	 -->
	 <!-- 
	 	id속성 => 실행할 태그를 호출할 때 사용되는 이름으로
	 				sqlMap태그의 namespace속성값과 연결해서
	 				사용한다.( 예: lprod.insertLprod )
	 	parameterClass => SQL문에 사용될 데이터가 들어있는 객체를
	 			기술한다.( 보통 VO클래스, 자바의 자료형이름 등이 사용된다.)
	 			(VO클래스 등을 기술할 때는 해당 클래스의 전체 이름을
	 			 기술해야 한다.)
	  -->
	 <insert id="insertLprod" parameterClass="basic.vo.LprodVO">
	 	insert into lprod (lprod_id, lprod_gu, lprod_nm)
	 	values (#lprod_id#, #lprod_gu# , #lprod_nm#)
	 </insert>
	 
	 <!-- parameterClass에 typeAlias에 지정한 alias명을 사용할 수 있다. -->
	 <update id="updateLprod" parameterClass="lpvo">
	 	update lprod set lprod_id=#lprod_id#, lprod_nm=#lprod_nm#
	 	where lprod_gu=#lprod_gu#
	 </update>
	 
	 <!-- 
	 	parameterClass에 설정되는 값이 단일값이면
	      SQL문에 이 값을 나타내는 변수는 특별히 이름이
	      정해지지 않는다.(즉, 사용자 임의로 지정할 수 있다.)
	 -->
	 <delete id="deleteLprod" parameterClass="String">
<!-- 	 	delete from lprod where lprod_gu=#lprod_gu# -->
		delete from lprod where lprod_gu=#sss#
	 </delete>
	 
	 <!-- 
	 	resultClass ==> select문을 처리한 결과를 저장할 VO클래스나
	 			자바의 자료형이름을 지정한다.
	 			select결과가 여러개이면 자동으로 list에 담아준다.
	 			그래서 결과가 여러개 일 경우에도 이 곳에 지정하는
	 			것은 1개의 레코드가 저장될 클래스나 자료형이름을 
	 			지정하면 된다.
	  -->
	 
	 <select id="getAllLprod" resultClass="lpvo">
	 	select * from lprod
	 </select>
	 
	 <select id="getLprod" parameterClass="String" resultClass="lpvo">
	 	select * from lprod where lprod_gu=#lprod_gu#
	 </select>

</sqlMap>	